generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public", "auth"]
}

model User {
  id                String     @id @default(uuid())
  name              String     @db.VarChar(255)
  email             String     @unique @db.VarChar(255)
  passwordHash      String
  profilePictureURL String?
  phoneNumber       String?    @db.VarChar(20)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  trips             Trip[]
  reminders         Reminder[]

  @@schema("auth")
}

model Trip {
  id          String      @id @default(uuid())
  userId      String
  title       String      @default("Your Magnificent Trip")
  description String?
  destination String      @db.VarChar(255)
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  itineraries Itinerary[]
  reminders   Reminder[]

  @@schema("public")
}

model Itinerary {
  id         String     @id @default(uuid())
  tripId     String
  date       DateTime
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  trip       Trip       @relation(fields: [tripId], references: [id])
  activities Activity[]

  @@schema("public")
}

model Activity {
  id          String           @id @default(uuid())
  itineraryId String
  title       String           @db.VarChar(255)
  description String?
  location    String           @db.VarChar(255)
  startTime   DateTime
  endTime     DateTime
  category    ActivityCategory @default(TRANSPORT)
  detail      Json?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  itinerary   Itinerary        @relation(fields: [itineraryId], references: [id])
  expenses    Expense[]

  @@schema("public")
}

enum ActivityCategory {
  FOOD          @map("FOOD")
  TRANSPORT     @map("TRANSPORT")
  ACCOMMODATION @map("ACCOMMODATION")
  SIGHTSEEING   @map("SIGHTSEEING")
  SHOPPING      @map("SHOPPING")
  OTHER         @map("OTHER")

  @@schema("public")
}

model Expense {
  id          String   @id @default(uuid())
  activityId  String
  title       String   @db.VarChar(255)
  description String?
  amount      Float
  currency    String   @db.VarChar(3)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  activity    Activity @relation(fields: [activityId], references: [id])

  @@schema("public")
}

model Reminder {
  id        String   @id @default(uuid())
  userId    String
  tripId    String
  message   String   @db.VarChar(255)
  time      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  trip      Trip     @relation(fields: [tripId], references: [id])

  @@schema("public")
}
